package com.huawei.xdevice.perfmodel.util;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import org.json.JSONObject;


import android.app.ActivityManager;
import android.app.ActivityManager.MemoryInfo;
import android.content.Context;
import android.text.format.Formatter;
import android.util.Log;

public class MemUtil {

	private static final String TAG = "MemUtil";

	public static String getRamInfo(Context context) {
		String totalMemory = getTotalMemory(context);
		String availMemory = getAvailMemory(context);
		Log.i(TAG, "AvailMemory:" + availMemory);
		Log.i(TAG, "TotalMemory:" + totalMemory);
		return availMemory  + "/"  + totalMemory;
	}
	
	
	private static String getAvailMemory(Context context) {// 获取当前android可用内存大小

		ActivityManager am = (ActivityManager) context
				.getSystemService(Context.ACTIVITY_SERVICE);
		MemoryInfo mi = new MemoryInfo();
		am.getMemoryInfo(mi);
		// mi.availMem; 当前系统的可用内存
		return Formatter.formatFileSize(context, mi.availMem);// 将获取的内存大小规格化
	}

	public static String getTotalMemory(Context context) {
		String str1 = "/proc/meminfo";// 系统内存信息文件
		String str2;
		String[] arrayOfString;
		long initial_memory = 0;

		try {
			FileReader localFileReader = new FileReader(str1);
			BufferedReader localBufferedReader = new BufferedReader(
					localFileReader, 8192);
			str2 = localBufferedReader.readLine();// 读取meminfo第一行，系统总内存大小

			arrayOfString = str2.split("\\s{1,}");
			for (String num : arrayOfString) {
				Log.i(str2, num + "/t");
			}

			initial_memory = Long.valueOf(arrayOfString[1]).longValue() * 1024;// 获得系统总内存，单位是KB，乘以1024转换为Byte
			localBufferedReader.close();

		} catch (IOException e) {
			e.printStackTrace();
		}
		return Formatter.formatFileSize(context, initial_memory);// Byte转换为KB或者MB，内存大小规格化
	}
}
